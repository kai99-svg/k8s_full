name: Check install tool and run lb controller

on:
  workflow_dispatch:

jobs:
  setup:
    name: Check installed tools
    
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Check installed tools
        run: |
          aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster
          kubectl version
          helm version
          aws --version

  install-controller:
    name: Install AWS Load Balancer Controller
    needs: setup
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Install service account
        run: kubectl apply -f serviceaacount.yaml

      - name: Install or Upgrade AWS Load Balancer Controller
        run: |
          helm repo add eks https://aws.github.io/eks-charts || true
          helm repo update

          if helm list -n kube-system | grep -q aws-load-balancer-controller; then
            echo "ðŸ”„ Helm release already exists. Running upgrade..."
            helm upgrade aws-load-balancer-controller eks/aws-load-balancer-controller \
              -n kube-system \
              --set clusterName=my-eks-cluster \
              --set serviceAccount.create=false \
              --set serviceAccount.name=aws-load-balancer-controller \
              --set region=us-east-1 \
              --set vpcId=vpc-0ce4e958d353f9c60 \
              --set ingressClass=alb \
              --set subnets="{subnet-078709d5ee8f63866,subnet-07d207d284dd76ffc,subnet-0a02659f3ef17a912,subnet-00d1c67cb398e5815}"
          else
            echo "ðŸš€ Installing AWS Load Balancer Controller..."
            helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
              -n kube-system \
              --set clusterName=my-eks-cluster \
              --set serviceAccount.create=false \
              --set serviceAccount.name=aws-load-balancer-controller \
              --set region=us-east-1 \
              --set vpcId=vpc-0ce4e958d353f9c60 \
              --set ingressClass=alb \
              --set subnets="{subnet-078709d5ee8f63866,subnet-07d207d284dd76ffc,subnet-0a02659f3ef17a912,subnet-00d1c67cb398e5815}"
          fi


  deploy-grafana:
    name: Deploy Grafana via Helm
    needs: install-controller
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Helm install Grafana
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
          helm install my-grafana grafana/grafana -f values.yaml
          
  apply-ingress:
    name: Apply Ingress Config
    needs: deploy-grafana
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Apply Ingress YAML
        run: cd ingress && kubectl apply -f ingress.yaml
